{"version":3,"sources":["webpack:///../../../src/directives/touch/index.ts","webpack:///./node_modules/@wellcare/vue-component/components/global/chips-field.vue?aef3","webpack:///./node_modules/@wellcare/vue-component/components/global/chips-field.vue","webpack:///./node_modules/@wellcare/vue-component/components/global/chips-field.vue?9131","webpack:///./node_modules/@wellcare/vue-component/components/global/chips-field.vue?d4a1"],"names":["touchend","event","wrapper","touch","changedTouches","touchendX","clientX","touchendY","clientY","end","Object","assign","touchstartX","touchstartY","offsetX","offsetY","Math","abs","left","right","up","down","handleGesture","createHandlers","value","touchmoveX","touchmoveY","start","move","touchstart","e","touchmove","Touch","inserted","el","binding","vnode","target","parent","parentElement","options","passive","handlers","_touchHandlers","context","_uid","keys","forEach","eventName","addEventListener","unbind","removeEventListener","defineComponent","props","wAttr","type","default","defaultValue","Array","setup","emit","chipsField","ref","data","watch","addChips","push","remove","index","splice","component","_vm","this","_h","$createElement","_c","_self","VTextField","_b","on","$event","indexOf","_k","keyCode","key","scopedSlots","_u","fn","_l","item","VChipGroup","VChip","staticClass","attrs","_v","_s","proxy","model","callback","$$v","expression"],"mappings":"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","file":"c7d250c.js","sourcesContent":["import { VNodeDirective, VNode } from 'vue/types/vnode'\nimport { keys } from '../../util/helpers'\nimport { TouchHandlers, TouchValue, TouchWrapper } from 'vuetify/types'\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\ninterface TouchVNodeDirective extends VNodeDirective {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start &&\n    wrapper.start(Object.assign(event, wrapper))\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end &&\n    wrapper.end(Object.assign(event, wrapper))\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move && wrapper.move(Object.assign(event, wrapper))\n}\n\nfunction createHandlers (value: TouchHandlers): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const value = binding.value!\n  const target = value.parent ? el.parentElement : el\n  const options = value.options || { passive: true }\n\n  // Needed to pass unit tests\n  if (!target) return\n\n  const handlers = createHandlers(binding.value!)\n  target._touchHandlers = Object(target._touchHandlers)\n  target._touchHandlers![vnode.context!._uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName] as EventListener, options)\n  })\n}\n\nfunction unbind (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const target = binding.value!.parent ? el.parentElement : el\n  if (!target || !target._touchHandlers) return\n\n  const handlers = target._touchHandlers[vnode.context!._uid]\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n  delete target._touchHandlers[vnode.context!._uid]\n}\n\nexport const Touch = {\n  inserted,\n  unbind,\n}\n\nexport default Touch\n","import mod from \"-!../../../../babel-loader/lib/index.js??ref--3-0!../../../../@nuxt/components/dist/loader.js??ref--1-0!../../../../vue-loader/lib/index.js??vue-loader-options!./chips-field.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../babel-loader/lib/index.js??ref--3-0!../../../../@nuxt/components/dist/loader.js??ref--1-0!../../../../vue-loader/lib/index.js??vue-loader-options!./chips-field.vue?vue&type=script&lang=js&\"","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { defineComponent, ref, watch } from '@nuxtjs/composition-api'\n\nexport default defineComponent({\n  props: {\n    wAttr: {\n      type: Object,\n      default: () => ({})\n    },\n    defaultValue: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props, { emit }) {\n    const chipsField = ref('')\n    const data = ref(props.defaultValue)\n    const addChips = () => {\n      if (chipsField.value) {\n        data.value.push(chipsField.value)\n        chipsField.value = ''\n      }\n    }\n    const remove = (index) => {\n      data.value.splice(index, 1)\n    }\n    watch(data, () => {\n      emit('data', data.value)\n    })\n    watch(\n      () => props.defaultValue,\n      () => {\n        data.value = props.defaultValue\n      }\n    )\n    return {\n      chipsField,\n      data,\n      addChips,\n      remove\n    }\n  }\n})\n","import { render, staticRenderFns } from \"./chips-field.vue?vue&type=template&id=7e31057a&\"\nimport script from \"./chips-field.vue?vue&type=script&lang=js&\"\nexport * from \"./chips-field.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { VChip } from 'vuetify/lib/components/VChip';\nimport { VChipGroup } from 'vuetify/lib/components/VChipGroup';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\n\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(VTextField,_vm._b({on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.addChips()}},scopedSlots:_vm._u([{key:\"append\",fn:function(){return _vm._l((_vm.data),function(item,index){return _c(VChipGroup,{key:index},[_c(VChip,{staticClass:\"ma-1\",attrs:{\"close\":\"\"},on:{\"click:close\":function($event){return _vm.remove(index)}}},[_vm._v(\"\\n        \"+_vm._s(item)+\"\\n      \")])],1)})},proxy:true}]),model:{value:(_vm.chipsField),callback:function ($$v) {_vm.chipsField=$$v},expression:\"chipsField\"}},'v-text-field',Object.assign({}, _vm.wAttr),false))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}